CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    email varchar(254) UNIQUE NOT NULL,
    name  varchar(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name  varchar(250) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS locations
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    latitude REAL,
    longitude REAL
);

CREATE TABLE IF NOT EXISTS compilations
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    is_pinned BOOLEAN,
    title VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation   VARCHAR(2000) NOT NULL,
    category_id  BIGINT NOT NULL REFERENCES categories (id),
    description  VARCHAR(7000) NOT NULL,
    event_date   TIMESTAMP WITHOUT TIME ZONE,
    location_id  BIGINT NOT NULL REFERENCES locations (id) ON DELETE CASCADE,
    is_paid BOOLEAN,
    request_moderation BOOLEAN,
    initiator_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    participant_limit BIGINT,
    state VARCHAR(100),
    title  VARCHAR(120) NOT NULL,
    date_create TIMESTAMP WITHOUT TIME ZONE
);

CREATE TABLE IF NOT EXISTS comments
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    content varchar(500) NOT NULL,
    event_id BIGINT NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    user_id BIGINT NOT NULl REFERENCES users (id) ON DELETE CASCADE,
    published_on TIMESTAMP WITHOUT TIME ZONE
);

CREATE TABLE IF NOT EXISTS event_compilations (
  event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  compilation_id BIGINT NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
  PRIMARY KEY (event_id, compilation_id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id    BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    created  TIMESTAMP WITHOUT TIME ZONE,
    requester_id  BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    event_id    BIGINT NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    status VARCHAR(100),
    UNIQUE(requester_id, event_id)
);